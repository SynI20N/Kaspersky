// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TImeScaleDB;

#nullable disable

namespace TImeScaleDB.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TImeScaleDB.Models.AlertEvent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("UniqueID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("AlertRuleId")
                        .HasColumnType("integer");

                    b.Property<string>("GPS")
                        .HasColumnType("text");

                    b.Property<long>("IMEI")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("AlertRuleId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("TImeScaleDB.Models.AlertRule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("UniqueID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<float>("CriticalValue")
                        .HasColumnType("real");

                    b.Property<int>("Operator")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("ValueName")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("TImeScaleDB.Models.AlertRuleNotificationGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("UniqueID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("AlertRuleId")
                        .HasColumnType("integer");

                    b.Property<int>("NotificationGroupId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("AlertRuleId");

                    b.HasIndex("NotificationGroupId");

                    b.ToTable("GroupAlerts");
                });

            modelBuilder.Entity("TImeScaleDB.Models.Email", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("UniqueID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("EmailValue")
                        .HasColumnType("text");

                    b.Property<int>("NotificationGroupId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("NotificationGroupId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("TImeScaleDB.Models.NotificationGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("UniqueID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("TImeScaleDB.Models.Sensor", b =>
                {
                    b.Property<DateTime>("UTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GPS")
                        .HasColumnType("text");

                    b.Property<float>("barometer")
                        .HasColumnType("real");

                    b.Property<float>("g_sensor")
                        .HasColumnType("real");

                    b.Property<byte>("hum")
                        .HasColumnType("smallint");

                    b.Property<float>("sensor1")
                        .HasColumnType("real");

                    b.Property<float>("sensor2")
                        .HasColumnType("real");

                    b.Property<float>("sensor3")
                        .HasColumnType("real");

                    b.Property<int>("temp")
                        .HasColumnType("integer");

                    b.Property<float>("volt")
                        .HasColumnType("real");

                    b.HasKey("UTC");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("TImeScaleDB.Models.TelegramChat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("UniqueID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("NotificationGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("TelegramChatId")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("NotificationGroupId");

                    b.ToTable("Telegrams");
                });

            modelBuilder.Entity("TImeScaleDB.Models.AlertEvent", b =>
                {
                    b.HasOne("TImeScaleDB.Models.AlertRule", "AlertRule")
                        .WithMany()
                        .HasForeignKey("AlertRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlertRule");
                });

            modelBuilder.Entity("TImeScaleDB.Models.AlertRuleNotificationGroup", b =>
                {
                    b.HasOne("TImeScaleDB.Models.AlertRule", "AlertRule")
                        .WithMany()
                        .HasForeignKey("AlertRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TImeScaleDB.Models.NotificationGroup", "NotificationGroup")
                        .WithMany()
                        .HasForeignKey("NotificationGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlertRule");

                    b.Navigation("NotificationGroup");
                });

            modelBuilder.Entity("TImeScaleDB.Models.Email", b =>
                {
                    b.HasOne("TImeScaleDB.Models.NotificationGroup", "NotificationGroup")
                        .WithMany("Emails")
                        .HasForeignKey("NotificationGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationGroup");
                });

            modelBuilder.Entity("TImeScaleDB.Models.TelegramChat", b =>
                {
                    b.HasOne("TImeScaleDB.Models.NotificationGroup", "NotificationGroup")
                        .WithMany("Telegrams")
                        .HasForeignKey("NotificationGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationGroup");
                });

            modelBuilder.Entity("TImeScaleDB.Models.NotificationGroup", b =>
                {
                    b.Navigation("Emails");

                    b.Navigation("Telegrams");
                });
#pragma warning restore 612, 618
        }
    }
}
