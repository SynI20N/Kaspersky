// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrackSense.API.AlertService;

#nullable disable

namespace TimeScaleDB.Migrations
{
    [DbContext(typeof(AlertServiceContext))]
    [Migration("20240727131752_AlertService-1")]
    partial class AlertService1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrackSense.API.AlertService.Models.AlertEvent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("AlertRuleId")
                        .HasColumnType("integer")
                        .HasColumnName("alert_rule_id");

                    b.Property<string>("GPS")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("gps");

                    b.Property<long>("IMEI")
                        .HasColumnType("bigint")
                        .HasColumnName("imei");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("status");

                    b.HasKey("ID");

                    b.HasIndex("AlertRuleId", "IMEI")
                        .IsUnique();

                    b.ToTable("alert_events", (string)null);
                });

            modelBuilder.Entity("TrackSense.API.AlertService.Models.AlertRule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<float>("CriticalValue")
                        .HasColumnType("real")
                        .HasColumnName("critical_value");

                    b.Property<long>("Imei")
                        .HasColumnType("bigint")
                        .HasColumnName("imei");

                    b.Property<int>("Operator")
                        .HasColumnType("integer")
                        .HasColumnName("operator");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<string>("ValueName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("value_name");

                    b.HasKey("ID");

                    b.ToTable("alert_rules", (string)null);
                });

            modelBuilder.Entity("TrackSense.API.AlertService.Models.AlertRuleNotificationGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("AlertRuleId")
                        .HasColumnType("integer")
                        .HasColumnName("alert_rule_id");

                    b.Property<int>("NotificationGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("notification_group_id");

                    b.HasKey("ID");

                    b.HasIndex("AlertRuleId");

                    b.HasIndex("NotificationGroupId");

                    b.ToTable("alert_rules_notification_groups", (string)null);
                });

            modelBuilder.Entity("TrackSense.API.AlertService.Models.Email", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("EmailValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email_value");

                    b.Property<int>("NotificationGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("notification_group_id");

                    b.HasKey("ID");

                    b.HasIndex("NotificationGroupId");

                    b.ToTable("emails", (string)null);
                });

            modelBuilder.Entity("TrackSense.API.AlertService.Models.NotificationGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("ID");

                    b.ToTable("notification_groups", (string)null);
                });

            modelBuilder.Entity("TrackSense.API.AlertService.Models.TelegramChat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("NotificationGroupId")
                        .HasColumnType("integer")
                        .HasColumnName("notification_group_id");

                    b.Property<string>("TelegramChatId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telegram_chat_id");

                    b.HasKey("ID");

                    b.HasIndex("NotificationGroupId");

                    b.ToTable("telegram_chats", (string)null);
                });

            modelBuilder.Entity("TrackSense.API.AlertService.Models.AlertEvent", b =>
                {
                    b.HasOne("TrackSense.API.AlertService.Models.AlertRule", "AlertRule")
                        .WithMany("AlertEvents")
                        .HasForeignKey("AlertRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AlertRule");
                });

            modelBuilder.Entity("TrackSense.API.AlertService.Models.AlertRuleNotificationGroup", b =>
                {
                    b.HasOne("TrackSense.API.AlertService.Models.AlertRule", "AlertRule")
                        .WithMany("AlertRuleNotificationGroups")
                        .HasForeignKey("AlertRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrackSense.API.AlertService.Models.NotificationGroup", "NotificationGroup")
                        .WithMany("AlertRuleNotificationGroups")
                        .HasForeignKey("NotificationGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AlertRule");

                    b.Navigation("NotificationGroup");
                });

            modelBuilder.Entity("TrackSense.API.AlertService.Models.Email", b =>
                {
                    b.HasOne("TrackSense.API.AlertService.Models.NotificationGroup", "NotificationGroup")
                        .WithMany("Emails")
                        .HasForeignKey("NotificationGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NotificationGroup");
                });

            modelBuilder.Entity("TrackSense.API.AlertService.Models.TelegramChat", b =>
                {
                    b.HasOne("TrackSense.API.AlertService.Models.NotificationGroup", "NotificationGroup")
                        .WithMany("Telegrams")
                        .HasForeignKey("NotificationGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NotificationGroup");
                });

            modelBuilder.Entity("TrackSense.API.AlertService.Models.AlertRule", b =>
                {
                    b.Navigation("AlertEvents");

                    b.Navigation("AlertRuleNotificationGroups");
                });

            modelBuilder.Entity("TrackSense.API.AlertService.Models.NotificationGroup", b =>
                {
                    b.Navigation("AlertRuleNotificationGroups");

                    b.Navigation("Emails");

                    b.Navigation("Telegrams");
                });
#pragma warning restore 612, 618
        }
    }
}
